trigger:
  branches:
    include:
      - main
      - feature/*
      - dev

pool:
  name: aws-agent

variables:
  - group: aws-credentials

stages:
  - stage: Format
    displayName: "Terraform Format Check"
    jobs:
      - job: FormatCheck
        steps:

          - script: |
              terraform fmt -check -recursive
            displayName: "Check Terraform formatting"
            workingDirectory: $(System.DefaultWorkingDirectory)
          - script: |
              echo "Formatting is correct."
            displayName: "Formatting Passed"
            condition: succeeded()

  - stage: Lint
    displayName: "Terraform Lint Check"
    dependsOn: Format
    jobs:
      - job: LintCheck
        steps:
          - script: |
              curl -s https://raw.githubusercontent.com/terraform-linters/tflint/master/install_linux.sh | bash
            displayName: "Install tflint"
          - script: |
              tflint --recursive
            displayName: "Run tflint"
            workingDirectory: $(System.DefaultWorkingDirectory)

  - stage: Validate
    displayName: "Terragrunt Validate"
    dependsOn: Lint
    jobs:
      - job: Validate
        steps:
          - checkout: self
          - script: |
              terragrunt validate-all
            displayName: "Terragrunt Validate"
            workingDirectory: $(System.DefaultWorkingDirectory)/terragrunt/envs/dev

  - stage: Plan
    displayName: "Terragrunt Plan"
    dependsOn: Validate
    jobs:
      - job: Plan
        steps:
          - checkout: self
          - script: |
              terragrunt plan-all
            displayName: "Terragrunt Plan"
            workingDirectory: $(System.DefaultWorkingDirectory)/terragrunt/envs/dev

  - stage: Apply
    displayName: "Terragrunt Apply"
    dependsOn: Plan
    condition: and(succeeded(), eq(variables['Build.Reason'], 'Manual'))
    jobs:
      - job: Apply
        steps:
          - checkout: self
          - script: |
              terragrunt apply-all -auto-approve
            displayName: "Terragrunt Apply"
            workingDirectory: $(System.DefaultWorkingDirectory)/terragrunt/envs/dev
